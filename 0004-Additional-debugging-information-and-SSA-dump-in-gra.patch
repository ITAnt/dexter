From d1940938ceff979c1960497c5611076418cbc2c3 Mon Sep 17 00:00:00 2001
From: Rubin Xu <Rubin.Xu@cl.cam.ac.uk>
Date: Thu, 26 Sep 2013 12:35:19 +0000
Subject: [PATCH] Additional debugging information and SSA dump in graphviz
 format.

---
 dx/src/com/android/dx/ssa/Optimizer.java     |   59 +++++++++++++++++++++++++-
 dx/src/com/android/dx/ssa/SsaRenamer.java    |    2 +-
 dx/src/com/android/dx/ssa/back/SsaToRop.java |    2 +-
 3 files changed, 60 insertions(+), 3 deletions(-)

diff --git a/dx/src/com/android/dx/ssa/Optimizer.java b/dx/src/com/android/dx/ssa/Optimizer.java
index 4146170..1600959 100644
--- a/dx/src/com/android/dx/ssa/Optimizer.java
+++ b/dx/src/com/android/dx/ssa/Optimizer.java
@@ -104,14 +104,25 @@ public class Optimizer {
         preserveLocals = inPreserveLocals;
         advice = inAdvice;
 
+        SsaRenamer.DEBUG = DEBUG_SSA_DUMP;
         ssaMeth = SsaConverter.convertToSsaMethod(rmeth, paramWidth, isStatic);
+        SsaRenamer.DEBUG = DEBUG_SSA_DUMP;
         runSsaFormSteps(ssaMeth, steps);
         
-        if (DEBUG_SSA_DUMP)
+        if (DEBUG_SSA_DUMP) {
         	dumpSSA(ssaMeth);
+        	dumpSSAGraph(ssaMeth);
+        	SsaToRop.DEBUG = true;
+        }
 
         RopMethod resultMeth = SsaToRop.convertToRopMethod(ssaMeth, false);
 
+        if (DEBUG_SSA_DUMP) {
+            System.out.println("-------------------------------------------");
+            dumpSSA(ssaMeth);
+            dumpSSAGraph(ssaMeth);
+            SsaToRop.DEBUG = false;
+        }
         if (resultMeth.getBlocks().getRegCount()
                 > advice.getMaxOptimalRegisterCount()) {
             // Try to see if we can squeeze it under the register count bar
@@ -326,4 +337,50 @@ public class Optimizer {
 
         System.err.println(sb.toString());
     }
+
+    public static void dumpSSAGraph(SsaMethod ssaMeth) {
+
+        StringBuffer sb = new StringBuffer(2000);
+
+        sb.append("digraph G {\n");
+        ArrayList<SsaBasicBlock> blocks = ssaMeth.getBlocks();
+        ArrayList<SsaBasicBlock> sortedBlocks = (ArrayList<SsaBasicBlock>) blocks.clone();
+        Collections.sort(sortedBlocks, SsaBasicBlock.LABEL_COMPARATOR);
+
+        for (SsaBasicBlock block : sortedBlocks) {
+            sb.append("block" + Hex.u2(block.getRopLabel()));
+
+            sb.append(" [label=\"");
+            for (SsaInsn insn : block.getInsns()) {
+                sb.append(insn.toHuman().replaceAll("\\\"", "\\\\\""));
+                sb.append("\\n");
+            }
+            sb.append("\"];\n");
+        }
+
+        
+        for (SsaBasicBlock block : sortedBlocks) {
+            int primary = block.getPrimarySuccessorRopLabel();
+
+            IntList succLabelList = block.getRopLabelSuccessorList();
+
+            int szSuccLabels = succLabelList.size();
+
+            for (int i = 0; i < szSuccLabels; i++) {
+                sb.append("block" + Hex.u2(block.getRopLabel()) + " -> block" + Hex.u2(succLabelList.get(i)));
+
+                //Exception path marked as red
+                if (szSuccLabels != 1 && primary != succLabelList.get(i)) {
+                    sb.append(" [color=red]");
+                } else {
+                }
+                sb.append(";\n");
+            }
+            
+        }
+        sb.append("}\n");
+        System.out.println(sb.toString());
+
+    }
+
 }
diff --git a/dx/src/com/android/dx/ssa/SsaRenamer.java b/dx/src/com/android/dx/ssa/SsaRenamer.java
index 859bafd..346057e 100644
--- a/dx/src/com/android/dx/ssa/SsaRenamer.java
+++ b/dx/src/com/android/dx/ssa/SsaRenamer.java
@@ -63,7 +63,7 @@ import java.util.HashSet;
  */
 public class SsaRenamer implements Runnable {
     /** debug flag */
-    private static final boolean DEBUG = false;
+    static boolean DEBUG = false;
 
     /** method we're processing */
     private final SsaMethod ssaMeth;
diff --git a/dx/src/com/android/dx/ssa/back/SsaToRop.java b/dx/src/com/android/dx/ssa/back/SsaToRop.java
index 554fc90..8c31b5a 100644
--- a/dx/src/com/android/dx/ssa/back/SsaToRop.java
+++ b/dx/src/com/android/dx/ssa/back/SsaToRop.java
@@ -45,7 +45,7 @@ import java.util.Comparator;
  */
 public class SsaToRop {
     /** local debug flag */
-    private static final boolean DEBUG = false;
+    public static boolean DEBUG = false;
 
     /** {@code non-null;} method to process */
     private final SsaMethod ssaMeth;
-- 
1.7.9.5

